{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, TransitionGroup as _TransitionGroup, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-f49e9b8c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Список постов\", -1));\nconst _hoisted_3 = {\n  key: 1,\n  style: {\n    \"color\": \"red\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_post_item = _resolveComponent(\"post-item\");\n  return $props.posts.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_TransitionGroup, {\n    name: \"post-list\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.posts, post => {\n      return _openBlock(), _createBlock(_component_post_item, {\n        post: post,\n        key: post.id,\n        onRemove: $event => _ctx.$emit('remove', post)\n      }, null, 8, [\"post\", \"onRemove\"]);\n    }), 128))]),\n    _: 1\n  })])) : (_openBlock(), _createElementBlock(\"h3\", _hoisted_3, \"Список постов пуст...\"));\n}","map":{"version":3,"mappings":";;;;;gEAEQA,oBAAsB,YAAlB,eAAa;;;EAUVC,KAAkB,EAAlB;IAAA;EAAA;;;;SAXAC,YAAK,CAACC,MAAM,kBAAvBC,oBAUM,oBATFC,UAAsB,EACtBC,aAOmBC;IAPDC,IAAI,EAAC;EAAW;sBAEjC,MAAqB,oBADlBJ,oBAKFK,6BAJcP,YAAK,EAAbQ,IAAI;2BADRC,aAKFC;QAHAF,IAAI,EAAEA,IAAI;QACVG,GAAG,EAAEH,IAAI,CAACI,EAAE;QACZC,QAAM,YAAEC,UAAK,WAAWN,IAAI;;;;yBAIlCN,oBAAwD,MAAxDa,UAAwD,EAA1B,uBAAqB","names":["_createElementVNode","style","$props","length","_createElementBlock","_hoisted_2","_createVNode","_TransitionGroup","name","_Fragment","post","_createBlock","_component_post_item","key","id","onRemove","_ctx","_hoisted_3"],"sourceRoot":"","sources":["C:\\Users\\ivank\\Desktop\\vue-project\\src\\components\\PostList.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"posts.length\">\r\n        <h3>Список постов</h3>\r\n        <transition-group name=\"post-list\">\r\n            <post-item\r\n         v-for=\"post in posts\"\r\n         :post=\"post\"\r\n         :key=\"post.id\"\r\n         @remove=\"$emit('remove', post)\"\r\n        />\r\n        </transition-group>\r\n    </div>\r\n    <h3 v-else style=\"color: red\">Список постов пуст...</h3>\r\n</template>\r\n\r\n<script>\r\nimport PostItem from \"@/components/PostItem.vue\"\r\nexport default {\r\n    components: {PostItem}, \r\n    props: {\r\n        posts: {\r\n            type: Array,\r\n            required: true\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.post-list-item {\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n}\r\n.post-list-enter-active,\r\n.post-list-leave-active {\r\n  transition: all 0.5s ease;\r\n}\r\n.post-list-enter-from,\r\n.post-list-leave-to {\r\n  opacity: 0;\r\n  transform: translateX(-130px);\r\n}\r\n.post-list-move {\r\n  transition: transform 0.5s ease;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}